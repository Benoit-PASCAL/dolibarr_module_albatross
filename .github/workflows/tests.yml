name: Check PHPUnit Results

on: [ pull_request ]

jobs:
  check-results:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Check if phpunit.junit.xml was modified
        id: check_file
        uses: actions/github-script@v4
        with:
          script: |
            const pr = context.payload.pull_request;
            const { data: files } = await github.pulls.listFiles({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pr.number,
            });
            
            // Vérifier si le fichier a été modifié
            const fileModified = files.some(file => file.filename === 'test/phpunit.junit.xml');

            if (!fileModified) {
              // Si le fichier n'a pas été modifié, vérifie si son contenu a changé
              const { data: commit1 } = await github.repos.getCommit({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: pr.base.sha
              });

              const { data: commit2 } = await github.repos.getCommit({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: pr.head.sha
              });

              const file1 = commit1.files.find(file => file.filename === 'test/phpunit.junit.xml');
              const file2 = commit2.files.find(file => file.filename === 'test/phpunit.junit.xml');

              // Comparer le contenu des fichiers
              if (file1 && file2 && file1.patch !== file2.patch) {
                core.exportVariable('file_modified', true);
              } else {
                core.exportVariable('file_modified', false);
                core.setFailed('File phpunit.junit.xml was NOT modified in the pull request.');
              }
            } else {
              core.exportVariable('file_modified', true);
            }

      # Étape pour vérifier les résultats de PHPUnit si le fichier a été modifié
      - name: Check test results
        if: env.file_modified == 'true'
        run: |
          if grep -q 'failures="0"' test/phpunit.junit.xml; then
            echo "All tests passed!"
          else
            echo "Some tests failed."
            exit 1  # Forcer l'échec si des tests ont échoué
          fi

      # Étape finale pour s'assurer qu'une erreur est retournée si nécessaire
      - name: Fail the workflow if file wasn't modified or tests failed
        if: failure()  # Vérifie si l'une des étapes précédentes a échoué
        run: |
          echo "The workflow failed due to file modification or test failures."
